---
layout: post
title: "Writing Dockerfiles"
date: "2017-04-04"
slug: "Dockerfile"
description: "This post introduces to the concept of Dockerfile and how to write a proper Dockerfile and also a docker-compose.yml file. The post will be updated to add in a more extensive explanation on writing and managing these Dockerfiles."
category:
  - Docker
tags:
  - Docker

show_meta: true
comments: true
mathjax: true
gistembed: true
published: true
noindex: false
nofollow: false
hide_printmsg: false
summaryfeed: false
---


<style>
p {
  text-align: justify
}</style>

## Writing a Dockerfile.

### Basic Components:
**FROM** keyword - This is used to specify the image that has to be used while building a Dockerfile. <br>
**ADD** keyword. This is used to add a directory on the host machine to a relative location on the container. Takes two parameters source and destination directories <br>
**WORKDIR** keyword. This is used to specify the working directory in a container. <br>
**RUN** keyword. This is used to specify the commands that have to be run when bringing up a container. In other words, installation that is required can be done using this command. <br>
**CMD** keyword. This contains a list of arguments that can be used to execute a service or a program. <br>
 
### Sample Dockerfile:

{% highlight ruby %}

FROM python
ADD . /code
WORKDIR /code
RUN  pip install requirements.txt
CMD [“ls”]
 
requirements.txt file
--------------------------
redis
flask

{% endhighlight %}

### Writing a docker-compose file:
 
 
### Basic components:
**version** - version of the dockerfile. More information about the ‘version’ can be found on the version link. <br>
**services** - defines the services that are going to be defined in the docker-compose.yml file. <br>
### keywords within these services:
**build** : Specifies the build directory for the docker container. Use “.” for referencing the current build directory. <br>
**ports:** Can be used to bind the containers’ port and the port on the host machine volumes. <br>
**volumes**: Directories can be mounted as volumes and this keyword is used to specify the folder that has to be mounted. <br>
**image** - This keyword is mainly used for specifying the type of image that has to be used for a particular service. <br>
 
### Sample docker-compose.yml file.
 
In this example I’m using a simple example of a redis db that is being run as a web service and from within flask web application. This is the same example that they have used in Docker’s official documentation.

{% highlight ruby %}
version: ‘3’
services: web
 web:
  build:
  ports:
  volumes:
 redis:
  image: “redis”
  
 {% endhighlight %}

In the above example, the reference to the version 3 of Dockerfile is used and the the services that are run are the redis and web services. The web is a flask application that reads and writes query from a redis server that is as a container.
 
 
[version]: https://docs.docker.com/compose/compose-file/compose-versioning/
